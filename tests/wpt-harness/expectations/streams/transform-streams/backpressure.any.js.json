{
  "backpressure allows no transforms with a default identity transform and no reader": {
    "status": 0
  },
  "backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader": {
    "status": 0
  },
  "transform() should keep being called as long as there is no backpressure": {
    "status": 0
  },
  "writes should resolve as soon as transform completes": {
    "status": 0
  },
  "calling pull() before the first write() with backpressure should work": {
    "status": 0
  },
  "transform() should be able to read the chunk it just enqueued": {
    "status": 0
  },
  "blocking transform() should cause backpressure": {
    "status": 0
  },
  "writer.closed should resolve after readable is canceled during start": {
    "status": 0
  },
  "writer.closed should resolve after readable is canceled with backpressure": {
    "status": 0
  },
  "writer.closed should resolve after readable is canceled with no backpressure": {
    "status": 0
  },
  "cancelling the readable should cause a pending write to resolve": {
    "status": 0
  },
  "cancelling the readable side of a TransformStream should abort an empty pipe": {
    "status": 0
  },
  "cancelling the readable side of a TransformStream should abort an empty pipe after startup": {
    "status": 0
  },
  "cancelling the readable side of a TransformStream should abort a full pipe": {
    "status": 0
  }
}